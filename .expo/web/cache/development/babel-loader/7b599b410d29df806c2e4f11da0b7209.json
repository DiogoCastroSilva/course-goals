{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/diogosilva/Desktop/React-Native/course-goals/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Item from \"./components/Item/Item\";\nimport Input from \"./components/Input/Input\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      goal = _useState2[0],\n      setGoal = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goals = _useState4[0],\n      setGoals = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isAddMode = _useState6[0],\n      setAddMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isToastVisible = _useState8[0],\n      setToatVisibility = _useState8[1];\n\n  var goalInputHandler = function goalInputHandler(text) {\n    if (text) {\n      setGoal(text);\n    }\n  };\n\n  var addGoal = function addGoal() {\n    setAddMode(false);\n    setGoals(function (currentGoals) {\n      return [].concat(_toConsumableArray(currentGoals), [{\n        key: Math.random().toString(),\n        value: goal\n      }]);\n    });\n  };\n\n  var deleteGoal = function deleteGoal(key) {\n    console.log(key);\n    setGoals(function (currentGoals) {\n      return currentGoals.filter(function (goal) {\n        return goal.key !== key;\n      });\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add New Goal\",\n    onPress: function onPress() {\n      return setAddMode(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Course Goal\",\n    value: goal,\n    inputHandler: goalInputHandler,\n    submit: addGoal,\n    isVisible: isAddMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: goals,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(Item, {\n        item: itemData.item,\n        press: function press() {\n          return deleteGoal(itemData.item.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    isVisible: isToastVisible,\n    style: styles.toast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Removed Successfully\"), React.createElement(Button, {\n    title: \"Undo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    marginTop: 50,\n    marginHorizontal: 20,\n    flex: 1\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    width: '80%',\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10\n  },\n  goalItems: {},\n  toast: {\n    position: 'absolute',\n    bottom: 0,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#323232',\n    color: '#fff',\n    marginBottom: '.6%',\n    paddingStart: '1%',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/diogosilva/Desktop/React-Native/course-goals/App.js"],"names":["React","useState","Item","Input","App","goal","setGoal","goals","setGoals","isAddMode","setAddMode","isToastVisible","setToatVisibility","goalInputHandler","text","addGoal","currentGoals","key","Math","random","toString","value","deleteGoal","console","log","filter","styles","screen","itemData","item","toast","color","StyleSheet","create","marginTop","marginHorizontal","flex","inputContainer","flexDirection","justifyContent","alignItems","input","width","borderColor","borderWidth","padding","goalItems","position","bottom","backgroundColor","marginBottom","paddingStart"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  Button,\n  Text\n} from 'react-native';\nimport Item from './components/Item/Item';\nimport Input from './components/Input/Input';\n\nexport default function App() {\n  const [goal, setGoal] = useState('');\n  const [goals, setGoals] = useState([]);\n  const [isAddMode, setAddMode] = useState(false);\n  const [isToastVisible, setToatVisibility] = useState(false);\n\n  const goalInputHandler = (text) => {\n    if (text) {\n      setGoal(text);\n    }\n  };\n\n  const addGoal = () => {\n    setAddMode(false);\n    setGoals(currentGoals => [\n        ...currentGoals,\n        { key: Math.random().toString() , value: goal }\n    ]);\n  };\n\n  const deleteGoal = key => {\n    console.log(key);\n    setGoals(currentGoals =>\n      currentGoals.filter(goal => goal.key !== key));\n  };\n\n  return (\n    <View style={styles.screen}>\n        <Button\n          title=\"Add New Goal\"\n          onPress={() => setAddMode(true)}\n        />\n        <Input\n            placeholder=\"Course Goal\"\n            value={goal}\n            inputHandler={goalInputHandler}\n            submit={addGoal}\n            isVisible={isAddMode}\n        />\n        <FlatList\n            data={goals}\n            renderItem={itemData => (\n                <Item\n                  item={itemData.item}\n                  press={() => deleteGoal(itemData.item.key)} />\n            )}\n        />\n      {/* <ScrollView style={styles.goalItems}>\n          {goals.map((goal, index) => (\n            <View key={index} style={styles.goalItem}>\n              <Text>{goal}</Text>\n            </View>\n          ))}\n      </ScrollView> */}\n\n        <View isVisible={isToastVisible} style={styles.toast}>\n            <Text style={{color: '#fff'}}>Removed Successfully</Text>\n            <Button title=\"Undo\" />\n        </View>\n    </View>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    marginTop: 50,\n    marginHorizontal: 20,\n    flex: 1\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  input: {\n    width: '80%',\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10\n  },\n  goalItems: {\n    \n  },\n  toast: {\n    position: 'absolute',\n    bottom: 0,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#323232',\n    color: '#fff',\n    marginBottom: '.6%',\n    paddingStart: '1%',\n    width: '100%'\n  }\n});"]},"metadata":{},"sourceType":"module"}